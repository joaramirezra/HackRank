#include <bits/stdc++.h>

using namespace std;

int mayor(int max, int x){
    if(x > max) return x;
    else return max;
}
// Complete the hourglassSum function below.
int hourglassSum(vector<vector<int>> arr) {
   
    int suma = 0, max =0;
    for(int i=0; i < arr.size() - 2; i++){ // i es fila
        for(int j=0; j < arr.size() -2; j++){// j es columna
            for(int k=j ; k <= j+2 ; k++)suma += arr[i][k]+ arr[i+2][k]; // suma base y techo     
              suma += arr[i+1][j+1];    // suma valor del centro        
              if(i ==0 && j ==0 ) max = suma;    // compara el numero maximo
              else max = mayor(max , suma);
              suma = 0; // reinicia la suma
        }
   }
    return max;
}

int main()
{
    ofstream fout(getenv("OUTPUT_PATH"));

    vector<vector<int>> arr(6);
    for (int i = 0; i < 6; i++) {
        arr[i].resize(6);

        for (int j = 0; j < 6; j++) {
            cin >> arr[i][j];
        }

        cin.ignore(numeric_limits<streamsize>::max(), '\n');
    }

    int result = hourglassSum(arr);

    fout << result << "\n";

    fout.close();

    return 0;
}